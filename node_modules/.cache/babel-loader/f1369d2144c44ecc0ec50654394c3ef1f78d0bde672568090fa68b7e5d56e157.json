{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_SideBar = _resolveComponent(\"SideBar\");\n  const _component_Background = _resolveComponent(\"Background\");\n  const _component_MiniMap = _resolveComponent(\"MiniMap\");\n  const _component_Icon = _resolveComponent(\"Icon\");\n  const _component_ControlButton = _resolveComponent(\"ControlButton\");\n  const _component_Controls = _resolveComponent(\"Controls\");\n  const _component_VueFlow = _resolveComponent(\"VueFlow\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_SideBar), _createVNode(_component_VueFlow, {\n    nodes: _ctx.nodes,\n    edges: _ctx.edges,\n    class: _normalizeClass([{\n      dark: _ctx.dark\n    }, \"basic-flow\"]),\n    onDrop: _ctx.onDrop,\n    onDragover: _ctx.onDragOver,\n    onDragleave: _ctx.onDragLeave,\n    \"min-zoom\": 0.2,\n    \"max-zoom\": 4\n  }, {\n    default: _withCtx(() => [_createVNode(_component_Background, {\n      style: _normalizeStyle({\n        backgroundColor: _ctx.isDragOver ? '#e7f3ff' : 'transparent',\n        transition: 'background-color 0.2s ease'\n      }),\n      \"pattern-color\": \"#aaa\",\n      gap: 16\n    }, null, 8 /* PROPS */, [\"style\"]), _createVNode(_component_MiniMap), _createVNode(_component_Controls, {\n      position: \"top-right\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_ControlButton, {\n        title: \"Reset Transform\",\n        onClick: _ctx.resetTransform\n      }, {\n        default: _withCtx(() => [_createVNode(_component_Icon, {\n          name: \"reset\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_ControlButton, {\n        title: \"Toggle Dark Mode\",\n        onClick: _ctx.toggleDarkMode\n      }, {\n        default: _withCtx(() => [_ctx.dark ? (_openBlock(), _createBlock(_component_Icon, {\n          key: 0,\n          name: \"sun\"\n        })) : (_openBlock(), _createBlock(_component_Icon, {\n          key: 1,\n          name: \"moon\"\n        }))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_ControlButton, {\n        title: \"Log `toObject`\",\n        onClick: _ctx.logToObject\n      }, {\n        default: _withCtx(() => [_createVNode(_component_Icon, {\n          name: \"log\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"nodes\", \"edges\", \"class\", \"onDrop\", \"onDragover\", \"onDragleave\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_SideBar","_component_VueFlow","nodes","_ctx","edges","class","_normalizeClass","dark","onDrop","onDragover","onDragOver","onDragleave","onDragLeave","default","_withCtx","_component_Background","style","_normalizeStyle","isDragOver","gap","_component_MiniMap","_component_Controls","position","_component_ControlButton","title","onClick","resetTransform","_component_Icon","name","_","toggleDarkMode","_createBlock","key","logToObject"],"sources":["D:\\poc-ai-workflow\\src\\App.vue"],"sourcesContent":["<template>\n  <SideBar />\n  <VueFlow :nodes=\"nodes\" :edges=\"edges\" :class=\"{ dark }\" class=\"basic-flow\" @drop=\"onDrop\" @dragover=\"onDragOver\"\n    @dragleave=\"onDragLeave\" :min-zoom=\"0.2\" :max-zoom=\"4\">\n    <Background :style=\"{\n      backgroundColor: isDragOver ? '#e7f3ff' : 'transparent',\n      transition: 'background-color 0.2s ease',\n    }\" pattern-color=\"#aaa\" :gap=\"16\" />\n\n    <MiniMap />\n\n    <Controls position=\"top-right\">\n      <ControlButton title=\"Reset Transform\" @click=\"resetTransform\">\n        <Icon name=\"reset\" />\n      </ControlButton>\n      <ControlButton title=\"Toggle Dark Mode\" @click=\"toggleDarkMode\">\n        <Icon v-if=\"dark\" name=\"sun\" />\n        <Icon v-else name=\"moon\" />\n      </ControlButton>\n      <ControlButton title=\"Log `toObject`\" @click=\"logToObject\">\n        <Icon name=\"log\" />\n      </ControlButton>\n    </Controls>\n  </VueFlow>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { VueFlow, useVueFlow } from '@vue-flow/core'\nimport { Background } from '@vue-flow/background'\nimport { ControlButton, Controls } from '@vue-flow/controls'\nimport { MiniMap } from '@vue-flow/minimap'\nimport Icon from './components/ControlIcons.vue'\nimport SideBar from './components/SideBar.vue'\nimport { useDragAndDropStore } from '@/stores/index.js';\nimport { initialNodes, }\n\nconst { onNodeDragStop, onConnect, setViewport, toObject, screenToFlowCoordinate } = useVueFlow()\n\nconst dark = ref(false)\nconst store = useDragAndDropStore()\nconst nodeCount = ref(0)\n\nconst draggedType = computed(() => store.draggedType)\nconst isDragging = computed(() => store.isDragging)\nconst isDragOver = computed(() => store.isDragOver)\nconst nodes = computed(() => store.nodes)\nconst edges = computed(() => store.edges)\n\nwatch(isDragging, (dragging) => {\n  document.body.style.userSelect = dragging ? 'none' : ''\n})\n\nconst toggleDarkMode = () => {\n  dark.value = !dark.value\n}\n\nconst resetTransform = () => {\n  setViewport({ x: 0, y: 0, zoom: 1 })\n}\n\nconst logToObject = () => {\n  console.log(toObject())\n}\n\nconst getNewNodeId = (type) => {\n  const timeStamp = Date.now()\n  return `${timeStamp}-${type}-${nodeCount.value++}`\n}\n\nconst getNewEdgeId = (src, tgt) => {\n  return src + \"___\" + tgt;\n}\n\nconst onDrop = (event) => {\n  const position = screenToFlowCoordinate({\n    x: event.clientX - 75, // - 275 - 75,\n    y: event.clientY - 18, // - 18,\n  })\n\n  const nodeId = getNewNodeId(draggedType.value)\n\n  const newNode = {\n    id: nodeId,\n    type: draggedType.value,\n    position: position,\n    data: { label: `${draggedType.value} ${nodeCount.value}` },\n  }\n  nodes.value.push(newNode)\n}\n\nconst onDragOver = (event) => {\n  event.preventDefault()\n  if (draggedType.value) {\n    store.isDragOver = true\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'move'\n    }\n  }\n}\n\nconst onDragLeave = () => {\n  store.isDragOver = false\n}\n\nonNodeDragStop(({ event, node }) => {\n  nodes.value.forEach((obj) => {\n    if (obj.id == node.id) {\n      obj.position.x = event.clientX - 75 - 275;\n      obj.position.y = event.clientY - 18;\n    }\n  })\n})\n\nonConnect((event) => {\n  const edgeId = getNewEdgeId(event.source, event.target);\n  const newEdge = {\n    id: edgeId,\n    source: event.source,\n    target: event.target,\n    animated: true,\n  }\n  edges.value.push(newEdge);\n})\n</script>\n\n<style>\n@import '@vue-flow/core/dist/style.css';\n@import '@vue-flow/core/dist/theme-default.css';\n@import './main.css';\n\n#app {\n  display: flex;\n}\n</style>\n"],"mappings":";;;;;;;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAWC,kBAAA,GACXD,YAAA,CAqBUE,kBAAA;IArBAC,KAAK,EAAEC,IAAA,CAAAD,KAAK;IAAGE,KAAK,EAAED,IAAA,CAAAC,KAAK;IAAGC,KAAK,EAF/CC,eAAA;MAAAC,IAAA,EAEmDJ,IAAA,CAAAI;IAAI,GAAU,YAAY;IAAEC,MAAI,EAAEL,IAAA,CAAAK,MAAM;IAAGC,UAAQ,EAAEN,IAAA,CAAAO,UAAU;IAC7GC,WAAS,EAAER,IAAA,CAAAS,WAAW;IAAG,UAAQ,EAAE,GAAG;IAAG,UAAQ,EAAE;;IAHxDC,OAAA,EAAAC,QAAA,CAII,MAGoC,CAHpCf,YAAA,CAGoCgB,qBAAA;MAHvBC,KAAK,EAJtBC,eAAA;yBAIiDd,IAAA,CAAAe,UAAU;;;MAGpD,eAAa,EAAC,MAAM;MAAEC,GAAG,EAAE;wCAE9BpB,YAAA,CAAWqB,kBAAA,GAEXrB,YAAA,CAWWsB,mBAAA;MAXDC,QAAQ,EAAC;IAAW;MAXlCT,OAAA,EAAAC,QAAA,CAYM,MAEgB,CAFhBf,YAAA,CAEgBwB,wBAAA;QAFDC,KAAK,EAAC,iBAAiB;QAAEC,OAAK,EAAEtB,IAAA,CAAAuB;;QAZrDb,OAAA,EAAAC,QAAA,CAaQ,MAAqB,CAArBf,YAAA,CAAqB4B,eAAA;UAAfC,IAAI,EAAC;QAAO,G;QAb1BC,CAAA;sCAeM9B,YAAA,CAGgBwB,wBAAA;QAHDC,KAAK,EAAC,kBAAkB;QAAEC,OAAK,EAAEtB,IAAA,CAAA2B;;QAftDjB,OAAA,EAAAC,QAAA,CAgBQ,MAA+B,CAAnBX,IAAA,CAAAI,IAAI,I,cAAhBwB,YAAA,CAA+BJ,eAAA;UAhBvCK,GAAA;UAgB0BJ,IAAI,EAAC;6BACvBG,YAAA,CAA2BJ,eAAA;UAjBnCK,GAAA;UAiBqBJ,IAAI,EAAC;;QAjB1BC,CAAA;sCAmBM9B,YAAA,CAEgBwB,wBAAA;QAFDC,KAAK,EAAC,gBAAgB;QAAEC,OAAK,EAAEtB,IAAA,CAAA8B;;QAnBpDpB,OAAA,EAAAC,QAAA,CAoBQ,MAAmB,CAAnBf,YAAA,CAAmB4B,eAAA;UAAbC,IAAI,EAAC;QAAK,G;QApBxBC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}