{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, watch } from 'vue';\nimport { VueFlow, useVueFlow } from '@vue-flow/core';\nimport { Background } from '@vue-flow/background';\nimport { ControlButton, Controls } from '@vue-flow/controls';\nimport { MiniMap } from '@vue-flow/minimap';\nimport Icon from './components/ControlIcons.vue';\nimport SideBar from './components/SideBar.vue';\nimport { useDragAndDropStore } from '@/stores/index.js';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const {\n      onNodeDragStop,\n      onConnect,\n      setViewport,\n      toObject,\n      screenToFlowCoordinate\n    } = useVueFlow();\n    const dark = ref(false);\n    const store = useDragAndDropStore();\n    const nodeCount = ref(0);\n    const draggedType = computed(() => store.draggedType);\n    const isDragging = computed(() => store.isDragging);\n    const isDragOver = computed(() => store.isDragOver);\n    const nodes = initialNodes; //computed(() => store.nodes)\n    const edges = initialEdges; //computed(() => store.edges)\n\n    watch(isDragging, dragging => {\n      document.body.style.userSelect = dragging ? 'none' : '';\n    });\n    const toggleDarkMode = () => {\n      dark.value = !dark.value;\n    };\n    const resetTransform = () => {\n      setViewport({\n        x: 0,\n        y: 0,\n        zoom: 1\n      });\n    };\n    const logToObject = () => {\n      console.log(toObject());\n    };\n    const getNewNodeId = type => {\n      const timeStamp = Date.now();\n      return `${timeStamp}-${type}-${nodeCount.value++}`;\n    };\n    const getNewEdgeId = (src, tgt) => {\n      return src + \"___\" + tgt;\n    };\n    const onDrop = event => {\n      const position = screenToFlowCoordinate({\n        x: event.clientX - 75,\n        // - 275 - 75,\n        y: event.clientY - 18 // - 18,\n      });\n      const nodeId = getNewNodeId(draggedType.value);\n      const newNode = {\n        id: nodeId,\n        type: draggedType.value,\n        position: position,\n        data: {\n          label: `${draggedType.value} ${nodeCount.value}`\n        }\n      };\n      nodes.value.push(newNode);\n    };\n    const onDragOver = event => {\n      event.preventDefault();\n      if (draggedType.value) {\n        store.isDragOver = true;\n        if (event.dataTransfer) {\n          event.dataTransfer.dropEffect = 'move';\n        }\n      }\n    };\n    const onDragLeave = () => {\n      store.isDragOver = false;\n    };\n    onNodeDragStop(({\n      event,\n      node\n    }) => {\n      nodes.value.forEach(obj => {\n        if (obj.id == node.id) {\n          obj.position.x = event.clientX - 75 - 275;\n          obj.position.y = event.clientY - 18;\n        }\n      });\n    });\n    onConnect(event => {\n      const edgeId = getNewEdgeId(event.source, event.target);\n      const newEdge = {\n        id: edgeId,\n        source: event.source,\n        target: event.target,\n        animated: true\n      };\n      edges.value.push(newEdge);\n    });\n    const __returned__ = {\n      onNodeDragStop,\n      onConnect,\n      setViewport,\n      toObject,\n      screenToFlowCoordinate,\n      dark,\n      store,\n      nodeCount,\n      draggedType,\n      isDragging,\n      isDragOver,\n      nodes,\n      edges,\n      toggleDarkMode,\n      resetTransform,\n      logToObject,\n      getNewNodeId,\n      getNewEdgeId,\n      onDrop,\n      onDragOver,\n      onDragLeave,\n      ref,\n      computed,\n      watch,\n      get VueFlow() {\n        return VueFlow;\n      },\n      get useVueFlow() {\n        return useVueFlow;\n      },\n      get Background() {\n        return Background;\n      },\n      get ControlButton() {\n        return ControlButton;\n      },\n      get Controls() {\n        return Controls;\n      },\n      get MiniMap() {\n        return MiniMap;\n      },\n      Icon,\n      SideBar,\n      get useDragAndDropStore() {\n        return useDragAndDropStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","VueFlow","useVueFlow","Background","ControlButton","Controls","MiniMap","Icon","SideBar","useDragAndDropStore","onNodeDragStop","onConnect","setViewport","toObject","screenToFlowCoordinate","dark","store","nodeCount","draggedType","isDragging","isDragOver","nodes","initialNodes","edges","initialEdges","dragging","document","body","style","userSelect","toggleDarkMode","value","resetTransform","x","y","zoom","logToObject","console","log","getNewNodeId","type","timeStamp","Date","now","getNewEdgeId","src","tgt","onDrop","event","position","clientX","clientY","nodeId","newNode","id","data","label","push","onDragOver","preventDefault","dataTransfer","dropEffect","onDragLeave","node","forEach","obj","edgeId","source","target","newEdge","animated"],"sources":["D:/poc-ai-workflow/src/App.vue"],"sourcesContent":["<template>\n  <SideBar />\n  <VueFlow :nodes=\"nodes\" :edges=\"edges\" :class=\"{ dark }\" class=\"basic-flow\" @drop=\"onDrop\" @dragover=\"onDragOver\"\n    @dragleave=\"onDragLeave\" :min-zoom=\"0.2\" :max-zoom=\"4\">\n    <Background :style=\"{\n      backgroundColor: isDragOver ? '#e7f3ff' : 'transparent',\n      transition: 'background-color 0.2s ease',\n    }\" pattern-color=\"#aaa\" :gap=\"16\" />\n\n    <MiniMap />\n\n    <Controls position=\"top-right\">\n      <ControlButton title=\"Reset Transform\" @click=\"resetTransform\">\n        <Icon name=\"reset\" />\n      </ControlButton>\n      <ControlButton title=\"Toggle Dark Mode\" @click=\"toggleDarkMode\">\n        <Icon v-if=\"dark\" name=\"sun\" />\n        <Icon v-else name=\"moon\" />\n      </ControlButton>\n      <ControlButton title=\"Log `toObject`\" @click=\"logToObject\">\n        <Icon name=\"log\" />\n      </ControlButton>\n    </Controls>\n  </VueFlow>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { VueFlow, useVueFlow } from '@vue-flow/core'\nimport { Background } from '@vue-flow/background'\nimport { ControlButton, Controls } from '@vue-flow/controls'\nimport { MiniMap } from '@vue-flow/minimap'\nimport Icon from './components/ControlIcons.vue'\nimport SideBar from './components/SideBar.vue'\nimport { useDragAndDropStore } from '@/stores/index.js';\n\nconst { onNodeDragStop, onConnect, setViewport, toObject, screenToFlowCoordinate } = useVueFlow()\n\nconst dark = ref(false)\nconst store = useDragAndDropStore()\nconst nodeCount = ref(0)\n\nconst draggedType = computed(() => store.draggedType)\nconst isDragging = computed(() => store.isDragging)\nconst isDragOver = computed(() => store.isDragOver)\nconst nodes = initialNodes //computed(() => store.nodes)\nconst edges = initialEdges //computed(() => store.edges)\n\nwatch(isDragging, (dragging) => {\n  document.body.style.userSelect = dragging ? 'none' : ''\n})\n\nconst toggleDarkMode = () => {\n  dark.value = !dark.value\n}\n\nconst resetTransform = () => {\n  setViewport({ x: 0, y: 0, zoom: 1 })\n}\n\nconst logToObject = () => {\n  console.log(toObject())\n}\n\nconst getNewNodeId = (type) => {\n  const timeStamp = Date.now()\n  return `${timeStamp}-${type}-${nodeCount.value++}`\n}\n\nconst getNewEdgeId = (src, tgt) => {\n  return src + \"___\" + tgt;\n}\n\nconst onDrop = (event) => {\n  const position = screenToFlowCoordinate({\n    x: event.clientX - 75, // - 275 - 75,\n    y: event.clientY - 18, // - 18,\n  })\n\n  const nodeId = getNewNodeId(draggedType.value)\n\n  const newNode = {\n    id: nodeId,\n    type: draggedType.value,\n    position: position,\n    data: { label: `${draggedType.value} ${nodeCount.value}` },\n  }\n  nodes.value.push(newNode)\n}\n\nconst onDragOver = (event) => {\n  event.preventDefault()\n  if (draggedType.value) {\n    store.isDragOver = true\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'move'\n    }\n  }\n}\n\nconst onDragLeave = () => {\n  store.isDragOver = false\n}\n\nonNodeDragStop(({ event, node }) => {\n  nodes.value.forEach((obj) => {\n    if (obj.id == node.id) {\n      obj.position.x = event.clientX - 75 - 275;\n      obj.position.y = event.clientY - 18;\n    }\n  })\n})\n\nonConnect((event) => {\n  const edgeId = getNewEdgeId(event.source, event.target);\n  const newEdge = {\n    id: edgeId,\n    source: event.source,\n    target: event.target,\n    animated: true,\n  }\n  edges.value.push(newEdge);\n})\n</script>\n\n<style>\n@import '@vue-flow/core/dist/style.css';\n@import '@vue-flow/core/dist/theme-default.css';\n@import './main.css';\n\n#app {\n  display: flex;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}