{"ast":null,"code":"import { createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input-prompt-node-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"input-prompt-node-wrapper__head\"\n};\nconst _hoisted_3 = {\n  class: \"input-prompt-node-wrapper__text-area\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"NodeResizer\"], {\n    \"min-width\": \"100\",\n    \"min-height\": \"30\"\n  }), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString($setup.headContent), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userInput = $event),\n    placeholder: \"Query Prompt here...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.userInput]])])]), _createVNode($setup[\"Handle\"], {\n    type: \"source\",\n    position: $setup.Position.Right\n  }, null, 8 /* PROPS */, [\"position\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","$setup","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","headContent","_hoisted_3","_cache","$event","userInput","placeholder","type","position","Position","Right"],"sources":["D:\\poc-ai-workflow\\src\\components\\InputPromptNode.vue"],"sourcesContent":["<template>\r\n    <NodeResizer min-width=\"100\" min-height=\"30\" > </NodeResizer>\r\n    <div class=\"input-prompt-node-wrapper\">\r\n        <div class=\"input-prompt-node-wrapper__head\">\r\n            <p>{{ headContent }}</p>\r\n        </div>\r\n        <div class=\"input-prompt-node-wrapper__text-area\">\r\n            <textarea v-model=\"userInput\" placeholder=\"Query Prompt here...\"></textarea>\r\n        </div>\r\n    </div>\r\n    <Handle type=\"source\" :position=\"Position.Right\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from 'vue'\r\nimport { Handle, Position } from '@vue-flow/core'\r\nimport { useDragAndDropStore } from '@/stores'\r\nimport { NodeResizer } from '@vue-flow/node-resizer'\r\n\r\nconst userInput = ref('')\r\nconst store = useDragAndDropStore()\r\nconst headContent = ref('Input ( Prompt )')\r\n\r\nwatch(userInput, (input) => {\r\n    store.nodes.forEach((node) => {\r\n        if (node.id == store.activeNodeId) {\r\n            node.data.userInput = input;\r\n        }\r\n    })\r\n})\r\n</script>\r\n\r\n<style>\r\n.input-prompt-node-wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    border: 1px solid blue;\r\n    padding: 8px;\r\n    /* height: 100%; */\r\n    /* width: 280px; */\r\n    /* height: 350px; */\r\n\r\n    .input-prompt-node-wrapper__head{\r\n        /* width: 100%; */\r\n    }\r\n\r\n    .input-prompt-node-wrapper__text-area {\r\n        display: flex;\r\n        flex-direction: column;\r\n        /* width: 100%; */\r\n        /* height: 100%; */\r\n\r\n        textarea {\r\n            /* height: 100%; */\r\n            padding: 8px;\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAA2B;;EAC7BA,KAAK,EAAC;AAAiC;;EAGvCA,KAAK,EAAC;AAAsC;;uBANzDC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAA6DC,MAAA;IAAhD,WAAS,EAAC,KAAK;IAAC,YAAU,EAAC;MACxCC,mBAAA,CAOM,OAPNC,UAOM,GANFD,mBAAA,CAEM,OAFNE,UAEM,GADFF,mBAAA,CAAwB,WAAAG,gBAAA,CAAlBJ,MAAA,CAAAK,WAAW,iB,GAErBJ,mBAAA,CAEM,OAFNK,UAEM,G,gBADFL,mBAAA,CAA4E;IAPxF,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAO+BR,MAAA,CAAAS,SAAS,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAvBV,MAAA,CAAAS,SAAS,E,OAGpCV,YAAA,CAAmDC,MAAA;IAA3CW,IAAI,EAAC,QAAQ;IAAEC,QAAQ,EAAEZ,MAAA,CAAAa,QAAQ,CAACC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}